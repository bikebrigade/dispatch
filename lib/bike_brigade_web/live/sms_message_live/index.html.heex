<div class={[
  "flex  h-full max-h-full min-h-0 -mx-3"
]}>
  <div class={[
    "h-full w-full px-2 md:w-4/12 sm:block",
    unless(@live_action == :index, do: "hidden")
  ]}>
    <div class={[
      "flex flex-col h-full bg-white shadow sm:rounded-lg",
      "max-h-[calc(100vh-6rem)] sm:max-h-[calc(100vh-6.75rem)] md:max-h-[calc(100vh-3rem)]"
    ]}>
      <div class="px-4 py-5 bg-white border-b border-gray-200 sm:px-6 sm:rounded-t-lg">
        <div class="flex flex-wrap items-center justify-between -mt-2 -ml-4 sm:flex-nowrap">
          <div class="w-full h-10 ml-4">
            <form phx-change="search_riders">
              <div class="relative">
                <.input
                  id="rider-search"
                  type="text"
                  name="search"
                  placeholder="Search for Riders"
                  value={@rider_search_value}
                  errors={[]}
                  autocomplete="off"
                  phx-keydown={JS.push("search_riders", value: %{search: ""})}
                  phx-key="escape"
                />
                <button
                  :if={@rider_search_value != ""}
                  type="button"
                  phx-click={JS.push("search_riders", value: %{search: ""})}
                  class="absolute right-1 text-gray-400 rounded-md top-2.5 hover:text-gray-500"
                >
                  <span class="sr-only">Clear Search</span>
                  <Heroicons.x_mark mini class="w-6 h-6" />
                </button>
              </div>
            </form>
          </div>
          <div class="flex-shrink-0 mt-2 ml-4">
            <div class="flex items-center">
              <span class="inline-flex ml-3 rounded-md shadow-sm">
                <.link
                  patch={~p"/messages/new"}
                  class="inline-flex items-center px-4 py-2 text-sm font-medium leading-5 text-white transition duration-150 ease-in-out bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:ring-indigo active:bg-indigo-700"
                >
                  New
                </.link>
              </span>
            </div>
          </div>
        </div>
      </div>
      <.sms_message_list
        rider_link_fn={fn rider_id -> ~p"/messages/#{rider_id}" end}
        conversations={@streams.conversations}
      />
    </div>
  </div>
  <div class="flex md:w-8/12 lg:8/12 max-h-[calc(100vh-3rem)] max-h-[calc(100vh-6rem)] sm:max-h-[calc(100vh-6.75rem)] md:max-h-[calc(100vh-3rem)]">
    <.live_component
      :if={@selected_rider}
      module={ConversationComponent}
      id={@selected_rider.id}
      rider={@selected_rider}
      live_action={@live_action}
      current_user={@current_user}
    />
  </div>
  <div
    :if={@latest_campaign_tasks != []}
    class={"w-full px-3 sm:w-2/12 #{unless @live_action == :tasks, do: "hidden"} sm:block"}
  >
    <div class="flex-grow-0 px-4 py-5 mb-2 bg-white border-b border-gray-200 sm:hidden">
      <div class="flex flex-row items-center -mt-2 -ml-4">
        <div class="ml-4">
          <.link patch={~p"/messages/#{@selected_rider}"}>
            <Heroicons.chevron_left solid class="w-6 h-6 text-indigo-600" />
          </.link>
        </div>
        <div class="h-10 mt-2 ml-4">
          <h3 class="text-lg font-medium leading-6 text-gray-900">
            {@selected_rider.name} - {Enum.count(@latest_campaign_tasks)} tasks
          </h3>
        </div>
      </div>
    </div>
    <%= for campaign <- @latest_campaign_tasks do %>
      <a
        href={~p"/campaigns/#{campaign}"}
        class="text-lg font-medium leading-6 text-indigo-600 hover:text-indigo-500"
      >
        {campaign_name(campaign)}
      </a>
      <p class="mt-1 text-sm font-medium 1text-gray-500">
        {format_date(campaign.delivery_start)}
        <br />
        {pickup_window(campaign, @selected_rider)}
      </p>
      <div class="flex items-center my-1">
        <a
          href={~p"/app/delivery/#{campaign.delivery_url_token}"}
          class="font-medium text-indigo-600 hover:text-indigo-500"
          target="_blank"
        >
          App
        </a>
        <button
          x-on:click={"$clipboard(#{details_buffer(campaign)})"}
          title="Copy delivery details"
          type="button"
          class="inline-flex items-center p-1 ml-2 text-indigo-700 bg-indigo-100 border border-transparent rounded-full shadow-sm hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        >
          <Heroicons.clipboard class="w-5 h-5" />
        </button>
      </div>

      <%= for task <- campaign.tasks do %>
        <div class="p-2 mb-2 bg-white border-b border-gray-200 shadow sm:rounded-lg">
          <div>{task.dropoff_name}</div>
          <div>{task.dropoff_location.address}</div>
          <div>{task.dropoff_phone}</div>
          <div>{request_type(task)}</div>

          <div class="flex flex-wrap p-3 -mx-2">
            <%= for delivery_status <- ~W(pending picked_up completed failed) do %>
              <div class="p-1">
                <.link phx-click={
                  JS.push("change_delivery_status",
                    value: %{task_id: task.id, delivery_status: delivery_status}
                  )
                }>
                  <div class={
                      "px-1.5 py-0.5 rounded-full border-solid border-2 border-gray-400 bg-opacity-50 text-gray-800 justify-center hover:border-gray-600 #{if task.delivery_status == String.to_atom(delivery_status), do: "bg-gray-400"}"
                    }>
                    <div class="text-xs text-center">
                      {delivery_status}
                    </div>
                  </div>
                </.link>
              </div>
            <% end %>
          </div>
          <div>
            <textarea
              phx-blur={JS.push("update_notes", value: %{task_id: task.id})}
              placeholder="Notes"
              class="w-full p-2 m-1 text-gray-700 bg-transparent border border-gray-800"
            >
                <%= task.delivery_status_notes %>
              </textarea>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>
</div>

<.currently_viewing others_present={@others_present} />

<.modal
  :if={@live_action == :new}
  id="messaging-modal"
  show
  on_cancel={JS.navigate(~p"/messages")}
>
  <.live_component
    module={BikeBrigadeWeb.SmsMessageLive.FormComponent}
    id={:new}
    action={@live_action}
    title={@page_title}
    current_user={@current_user}
  />
</.modal>
